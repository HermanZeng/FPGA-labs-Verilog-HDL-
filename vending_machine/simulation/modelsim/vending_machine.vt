// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "01/04/2017 22:17:03"
                                                                                
// Verilog Test Bench template for design : vending_machine
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module vending_machine_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
reg RESET;
// test vector input registers
reg CLOCK_50;
reg CONF;
reg FIVE;
reg ONE;
reg[3:0] MONEY;
//reg RESET;
reg [3:0] SELECT;
// wires                                               
wire [6:0]  HEX0;
wire [6:0]  HEX1;
wire [6:0]  HEX2;
wire [6:0]  HEX3;
wire [6:0]  HEX4;
wire [6:0]  HEX5;

// assign statements (if any)                          
vending_machine_v i1 (
// port map - connection between master ports and signals/registers   
	CLOCK_50,RESET,MONEY,CONF,SELECT,HEX0,HEX1,HEX2,HEX3,HEX4,HEX5
);
initial                                                
begin 
SELECT = 7;                                                 
MONEY = 3;
CLOCK_50=0;
while(1)
begin
#100 CLOCK_50 = ~ CLOCK_50;
end                                      
$display("Running testbench");                       
end 

initial
begin
CONF <= 1;
end
                                                   
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
@eachvec;                                              
// --> end                                             
end                                                    
endmodule

